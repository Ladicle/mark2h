// Code generated by go-bindata.
// sources:
// assets/markdown.html
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsMarkdownHtml = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x7c\x59\x97\xa2\x4a\xb6\xf0\x73\xf7\xaf\xa0\xf3\xac\x5e\x5d\xd5\x96\x0a\x38\x5b\xc3\xfa\x40\x71\x4a\x87\x34\xc5\x01\xfb\x3b\x0f\x01\x84\x80\x32\x09\x38\x9e\x75\xfe\xfb\x0d\xc0\x74\x64\xb2\xea\xdc\xbb\xee\xc3\x4d\x57\x9a\x18\x11\x7b\x88\x1d\x3b\xf6\x14\x91\x7e\xfb\x47\x7d\x50\x63\xb9\x37\x06\x93\x1d\x4d\xfd\xf1\xf7\x6f\xfe\x1f\x0c\xfb\x26\x43\x20\xba\x0f\xe8\x51\x83\x0e\xc0\x04\x19\x58\x36\x74\xbe\xbf\x8c\xd9\x46\xba\xfc\x82\x65\x4f\x9d\xaa\xa2\xaf\x30\x0b\xaa\xdf\x5f\x6c\xe7\xa0\x42\x5b\x86\xd0\x79\xc1\x64\x0b\x2e\xbe\xbf\x08\xb6\x9d\x95\x14\x47\xde\xf0\x19\xf4\x98\x0c\x46\x76\x1c\xb3\x9a\xcd\x0a\xa2\xbe\xb4\x33\x82\x6a\x6c\xc4\x85\x0a\x2c\x98\x11\x0c\x2d\x0b\x96\x60\x9f\x55\x15\xde\xce\xca\x8a\x24\xab\xe8\xd7\xc9\x2c\xed\x6c\x25\x93\xcf\xe0\x59\x1f\xd5\x07\x3d\x4d\xd1\x3d\x9a\x27\x8a\xb6\x60\x29\xa6\x83\xd9\x96\xf0\x0b\x14\x2e\x4d\x2e\xf6\x25\x42\xfe\x2d\xeb\x23\xbe\xa1\xf2\x43\x56\x11\x62\x45\x57\x9c\xd6\x07\x80\xa2\x4b\x03\xbd\x6b\x00\xf1\xd3\xe7\xaf\x17\x98\xbf\xfd\xed\x9b\xc7\xb4\xfb\x84\xf1\x86\x78\xc0\xfe\x40\x4f\xee\xe3\x3e\x6d\x2b\x47\x04\x54\x45\xcf\x96\x08\xad\x34\x6a\xfa\xea\xf5\x21\xca\xe9\x9d\x22\x3a\x72\x15\x23\x71\xdc\xfc\x68\x05\xfb\x8f\xd6\x4a\xf9\xaa\xd5\x92\x14\xbd\x8a\xe1\x18\xd8\x38\x86\xdf\x66\x02\x51\xf4\x10\xe7\x0b\xfe\x30\xec\x4f\x8f\x77\xec\xff\x2d\x0c\xdd\x49\x2f\x80\x00\x11\x17\x98\xff\x73\x6a\xd2\x14\xf5\x50\xc5\x0c\xc1\x51\x04\x43\xb7\xd3\xee\xea\x7d\xfd\x18\x82\x24\x5a\xc5\x36\x96\xfa\x49\x04\x0e\xa8\xba\x00\xd9\x9d\xb1\x58\x7c\xfd\x50\x97\x8d\xb3\x48\x97\xbf\xf2\xc0\x86\xc5\xfc\x17\x11\xaf\x34\xdf\x25\x8a\xa6\xbc\x9f\xf9\xee\xe3\xa9\xd6\x18\x52\xd1\x3f\x34\x33\xc6\xd5\x16\x7a\x68\x02\xef\xb3\xe4\xbe\xb5\xbd\xc7\xb1\xc8\x4e\xc6\xee\xe3\x5c\xf0\x70\x79\x5d\x06\x45\x21\x94\x2c\xd1\xdb\xf6\xdc\xcf\x07\x17\x3f\xdd\x71\x7b\xb8\x06\xc7\x8c\x73\xef\x4b\x7e\xda\xd8\xa1\x8f\x75\x0f\x88\x19\xbb\x90\x14\xd5\x61\xe5\xad\xd6\x27\xc5\x9a\xdb\xc8\xae\x3c\xca\x1e\x11\x9f\xbf\xb9\x4e\xeb\xbc\xfb\x58\x72\x91\xd6\x0e\x6e\x77\x6d\xdc\x4b\x95\xdb\xb2\xce\xcd\xfa\x2e\xbe\x26\x7b\x0d\x44\x1b\x54\x9b\x14\x6d\x38\xe5\xd0\xc7\x86\xed\xf6\xbc\xf9\x53\x17\x98\x75\xc5\x01\xcd\x89\x3c\x77\x3f\xdb\x1e\xd3\xb8\xfb\xd6\x97\xe4\x3c\xa8\x10\x86\xdb\xe7\xf2\xe7\xb1\x82\xf0\xa0\x9f\x55\x8d\x2a\xd7\xdf\x9b\xb2\x23\xb6\xdc\xf1\xdd\xb2\xdb\x58\xf7\x48\xed\x9a\x88\x9f\x05\xdf\xac\x2c\x39\x97\x3f\x9b\x3a\xcb\xa7\x46\xd1\x0a\xc5\xd2\x0e\x37\x93\x5d\xfe\x6a\x6b\x0f\x9f\x74\x12\x62\x99\x1a\x69\x05\x99\x9f\xba\xf3\x67\x5d\x22\xf4\xd0\xed\x52\x67\x9b\x52\xce\x1e\x08\xcd\xca\x51\x74\x1b\x15\x17\x94\x82\xee\x5b\x8f\xc9\x0d\xcd\x01\xbd\x13\xb4\x89\xdb\xc8\xf0\x6e\x63\xcb\x9d\x1f\x9d\x05\x8d\xa6\xb9\xca\x2d\x01\xcb\x15\xf7\xa0\xdc\xa1\x9a\xbd\x69\x76\x50\x24\xe9\xba\x82\x3b\x9d\x2e\x37\x54\x74\x61\xc6\x1c\x4c\xae\xad\x34\x3b\xcb\x91\xd4\xd2\x95\x61\x71\xa3\xb1\xf6\x98\x39\x74\xb5\x02\x3d\x29\xf6\xeb\xf4\x5b\x99\x35\x1d\xbb\xd8\xc0\xb7\xa9\x55\x16\x07\x3a\xa9\xa4\xd0\x46\xaa\xef\x72\x5b\x32\x55\x49\xd5\xe9\x57\xf6\x68\x77\xfa\xfa\xb4\xd3\x67\xa5\x16\x73\xc8\xd3\x52\x33\xc7\xf4\xda\x95\x7a\x8d\xa9\x0f\x9a\xcc\xec\x58\xa7\xea\xe3\x82\x4c\xbf\xf6\xda\x52\xff\x6d\xbe\x36\xea\xb9\x91\xa2\x4e\xc0\x6c\x5e\x63\xde\x73\xd9\x76\x89\x72\xf6\x4c\xa7\xeb\x1c\x8f\x9b\xf9\xa2\x9d\x9a\x4c\x56\xa6\xb5\x67\xd5\xd9\x48\x9e\xbe\xf2\x39\x96\x86\x42\x93\x20\xac\x9d\xd1\x57\x35\x4d\x27\xde\xc8\x29\x27\x74\x84\xa3\x9a\x23\xa1\x33\x32\x5f\xf5\xa3\x52\x2b\xa9\xc3\xc3\x14\x12\xb6\x36\x79\x3b\x64\xbb\x4e\xe9\x55\x48\xe1\xdb\x29\x97\x95\x28\xa9\xdd\x66\xd6\x54\xbf\xb2\x83\xb8\xb9\x7b\x9d\x59\x50\xe9\x01\x7b\xbf\x05\x7c\x7d\xd8\xeb\xe5\x2d\x65\x90\x5a\xef\x7b\xa4\x21\xed\xea\xcd\xc1\x9c\x9d\xed\x77\xfb\xba\x72\x10\x86\x6d\xc1\xe0\x1a\x74\x77\x59\x78\xcd\x31\x6d\x30\x12\x1c\x6a\x4d\xae\x58\x4e\xd9\xa5\x0e\x9a\x2c\xc0\xd2\x76\xd7\xab\x2c\x47\xeb\x41\xb9\x73\x98\x88\x85\xf7\x56\x45\x3a\xb0\x0e\x99\xea\x64\x0f\x63\x8d\x53\xdb\xef\xb8\x8d\xe7\xf5\x62\xaa\x34\xd1\x08\xe3\x08\x8f\x63\xd8\x65\xc0\x78\x29\x83\xfa\x68\x33\x6b\xed\x26\xef\xd2\xb6\xdb\xd1\x09\x67\x58\xda\x2b\x9b\xc9\x36\x6b\x08\xec\x7b\x23\x4f\x6a\x7d\x69\xde\xa4\x25\xae\xc9\xef\xe6\x03\xa4\x23\x54\xa3\xd9\xa1\xdb\x3d\x8a\x52\x8e\x54\xc3\x53\x05\x85\x6a\xb6\xa9\xa3\xbe\x04\x1c\x49\xaf\x38\xa4\x61\x79\x45\x2f\x1f\x77\x33\x25\x35\x25\x53\xbd\x65\xed\xd8\x6b\xd7\x29\x73\xb4\xdb\xce\x8e\xb5\x4a\x69\x9e\x6f\x4b\xe5\x7e\x96\xde\x73\xcd\xb9\x24\x48\x6a\x81\xa4\x6b\xa3\xe1\x2b\x45\xe5\x96\xb5\x49\x19\xa9\x31\xbd\xa0\x3e\xf6\x12\x43\x9f\xe9\xe7\x17\xb9\x2d\x55\x1b\xce\xd1\x66\x69\xf7\x96\xaf\x12\xa5\x71\xd4\x2b\x23\xd1\x33\xa4\x87\xb0\x6f\x2e\xb9\x26\x57\xdc\xb1\x0a\x2d\xcd\xa7\xb4\x44\xae\xb4\xf1\xde\xa8\x53\xf9\xde\x9b\xdc\x9c\xf7\xb8\x23\xad\x10\x54\xeb\x20\x4d\x90\x72\x8d\x6b\x00\xec\xd6\xa8\xef\xad\x26\xef\x65\x4d\xce\x96\x07\xf5\x3a\x63\x6f\xa9\x5d\x4b\xea\x21\x6d\xa8\xeb\xcd\x2e\xbe\x2f\x49\x9d\x61\x8d\xda\xf5\xa8\x8e\x98\xef\x79\x16\xa0\xe5\xcd\x0f\xc9\x01\x50\xf9\x3a\x85\xec\x13\x37\x5c\x21\x9c\xcd\x5e\xa3\xdc\x97\x38\xab\xdd\xcb\x75\xda\x54\x73\xc2\x71\x75\x36\x45\x31\x4b\x6a\xb7\xa9\x37\x4c\x5a\xa3\x2a\xaf\xbd\x3a\xb3\xeb\xd5\xe4\x8a\x92\xdd\x96\x5b\x65\xbb\x85\x67\xf3\xe2\x50\x20\x14\x4a\xa3\x56\x54\x17\x8c\x5f\xbb\x92\x8f\x9f\xe5\x2a\xdd\xba\xdd\x96\x98\x36\xef\x48\xeb\xd6\xf8\xcd\xac\x2b\x39\xe9\xcd\xa0\x27\x87\x77\x56\x63\x45\x71\xa0\xad\xd9\x19\x2b\x33\xb3\xb5\x65\xf0\xa4\x34\x24\x1a\xcb\x9d\x59\xdf\x2e\x76\x35\x5a\xd4\xc4\x59\xad\x40\x4d\x5e\x1b\x9b\x1c\x2c\xf4\x16\xfd\x46\x87\xac\xbc\xb2\x43\x36\x5f\x1e\xf0\x95\xac\xba\xe6\x76\x83\xe6\x7c\x0f\xc7\x50\xed\x93\x63\xf2\xbd\x98\x12\x28\x4b\x72\x6a\x1d\x13\x6c\xa6\xa5\xf1\x90\x5e\xeb\x8d\xd5\xd8\x5e\x52\x5c\x76\x35\x18\x13\xc2\x5b\xaa\x4e\x49\xdb\xfd\x4e\x27\x04\x79\x5e\xdf\x8d\x79\xb1\x58\x6b\x28\x5a\x73\xb6\x3b\xee\x1a\x45\xe7\x8d\x6f\xb4\x85\x25\xa3\xa6\xb6\x5b\xad\x97\xe5\x0f\x54\xbe\x0c\x8b\xce\xd4\x7a\xa5\x2c\x2d\x3f\xef\xa8\x35\x5e\xb4\xad\xfd\xca\xee\x12\xd4\x6e\xaa\x67\x0f\xf4\xa8\xf3\x6a\x72\xfc\xba\x4c\xcd\x00\x60\xf9\xb2\x37\x5f\xb2\x8c\xc4\x34\xa8\xe1\xf8\xdc\xa2\xe1\xb0\x5f\x1f\x0e\xa6\x83\x6c\xd6\x16\x69\x57\xcc\xef\x0a\x87\xcc\x21\xc3\x74\x91\xf0\x58\x26\xbf\x39\x1a\x85\x39\xfa\xe5\x49\x7a\x2f\xea\x8d\x81\x40\x75\xf7\xfd\x25\x55\x44\x9f\x0f\xac\xbd\xab\x95\x97\xdc\x4e\xc2\x27\x6a\x7f\x63\xd4\xd8\x29\xd5\x5b\xf7\x8f\xbd\xa3\x6d\xbc\x12\x16\x23\xf7\xd7\xf4\x81\x39\x40\x4b\x2a\xbc\xf5\x3a\x2a\xb7\x99\x6c\x20\xc3\xbe\x0a\x62\xb6\x5c\xd9\xd0\xa6\x6e\x6e\xdb\xcc\xc4\xd0\x60\xab\x6b\xf4\x90\x45\x84\x44\x5b\xcc\x7f\xf8\x93\x3c\x69\x4c\x87\x2c\x5e\xaa\x0d\x69\xb6\xb9\xc5\x3b\xb4\x0c\xa4\x55\xa9\x35\x3c\xbe\xee\x05\x40\xda\x9d\x1a\x43\xc8\x75\x27\x3f\x6c\xa4\x2a\x9d\xc1\x08\xd7\x79\x00\xb8\x7a\x6d\x88\x56\xa4\x53\xa2\x36\x39\x34\xcb\x54\x77\x40\xe4\x1a\x3d\x4d\x2b\x0a\x6a\xa9\x54\x2e\x6c\xb7\x50\xc7\x57\xf4\xb2\x55\xa3\xe5\x85\xc9\x6d\xfa\xa0\xf0\x26\x13\x02\x0e\xc9\xd9\x26\xb7\x64\xb6\xd3\x66\x69\x2c\xbe\xd5\xbb\xf3\x7c\xbf\x42\xea\x03\x2d\xc5\xd0\xb3\x0d\xc5\xb7\xb4\x76\x6f\xf4\xde\xb3\x53\x79\x30\x66\xc4\x7c\x5f\xcc\xd5\x5a\xf5\x72\x5f\xdc\x0e\xba\xac\x4d\x91\xcd\x6e\xb9\x57\x79\x1b\xd4\x79\xa1\x9b\x92\xeb\xa5\x1a\xb1\x37\x40\x0b\x76\x3b\x23\x06\x18\x78\x83\x99\x12\x79\x61\xb5\xaf\xa5\xd8\x71\x99\xdd\x6f\x6d\xae\x38\xc3\x61\xf7\x4d\x7b\x97\xad\x03\x39\x9d\x28\x46\xd7\x5c\x59\xbc\x59\xce\x77\xbb\xc3\xb7\x66\xbb\x24\x14\xed\x81\x32\x3e\x9a\xd3\xf6\x74\x54\x68\x1e\xd5\x91\x34\x3e\x1e\xbb\xf4\x48\x59\x0d\xde\x1a\xec\x60\xb6\x56\x0f\x25\x6b\xbd\xc7\xe7\xc4\xb0\x40\x53\x6d\x63\x4e\x8f\x1a\x8a\x3c\xe4\x86\x83\x01\xcd\x88\xab\xda\x40\x9a\xb1\x83\x16\x85\x97\x5a\x54\x73\xd9\x9c\x2a\xed\x25\x78\x9b\xf7\xa7\x44\x2e\x9b\x52\xb5\xe2\xa8\xd2\x60\x4b\x56\xb7\xd5\xe8\x14\x17\x43\x7e\x45\xb1\x83\x26\xb1\x24\x07\x8d\xde\x46\x78\xed\x74\xec\x7d\x7b\xb2\x18\x0e\xde\x55\x24\xd1\x83\x08\x8a\x23\x95\x10\xc7\x9c\x3c\xaa\x69\x84\x78\xa8\xa9\x0b\x03\xd6\xb7\x30\xbf\xee\x71\x62\x97\xe1\x17\xeb\xd6\x22\x37\xc8\x52\x62\x7d\xa3\x21\xdd\xa5\x7c\x7b\xc1\x21\xb3\x34\x1f\x72\x4b\x5a\x3b\x50\x4d\x6e\x38\xd7\x44\xb9\x5b\x3e\x76\xc5\x3a\x73\x10\xa9\xf7\x85\x41\xad\xdb\x27\xef\xdb\xa3\xe8\x1d\xf5\x4a\xd1\xe8\x6f\x36\x9b\x75\xfd\x1c\xf5\x18\x62\x9c\xa2\x8f\xef\xdf\x3f\xa3\x48\xc7\xd2\x80\xf3\xe9\x5f\x6e\xec\xf2\xaf\xcf\xa7\xe8\xe6\xcf\xbf\xfb\x7f\x33\x28\x90\x5a\x89\xc6\x4e\x4f\x9f\x82\xb4\x53\xec\x93\xd6\xec\xb4\x03\xf7\x8e\x1b\xac\xc1\x34\x10\x97\x1b\xdb\xa9\x62\x04\x8e\xff\xf3\x1c\x1e\xa5\x77\x90\x5f\x29\x4e\xdc\x30\xc1\x50\x0d\xab\x8a\xfd\x96\xcb\xe5\xbe\x06\x06\x5f\x2f\x2d\xa8\x6e\x21\x0a\xc0\x00\xd6\x87\x1b\xf8\xf2\x05\x3b\x37\x7c\xc1\x5e\x46\x50\x32\x20\x36\x6e\xa3\x66\xca\x52\x80\xfa\x05\x5b\x58\x10\xda\x40\xb7\xbf\x60\xee\x7b\xda\x86\x96\xb2\x40\x03\x29\xd3\x54\x21\x56\x73\xa9\x61\x8c\x66\x2c\x95\x97\x2b\xe8\x80\x96\xd1\x41\xe3\x0d\xf5\xe5\x96\x27\x77\x1a\x88\xff\xa2\x1b\x3f\x9e\xda\x51\x48\x08\xd3\x32\x74\x43\x5d\xd4\x93\x29\x9e\x3b\x76\x28\x7c\x4d\xef\x2c\x60\xa2\x48\xd6\x82\x60\x95\x76\x1b\xa2\xc5\x0b\x2e\x02\xe6\x81\xb0\x92\x2c\x63\xa3\x8b\xe9\x93\x84\x1c\x0b\x4d\xc7\x44\xd1\xba\xee\x04\xcb\x58\x84\x82\x61\x01\x47\x31\xf4\xb4\xbd\x52\x10\x59\x83\x5f\x42\xc1\xb1\x63\x68\x56\x01\x8a\x6e\xb7\xf0\x4b\x48\xaf\x6c\x6c\xa1\x75\xe1\xcb\xd8\x38\xde\x8c\x4f\x21\x37\x1e\x8d\xdc\x76\x2c\x43\x97\xee\xa2\xea\xdd\x49\x58\x8a\x2e\xa3\xb5\x71\x7e\x01\x03\x5a\x20\x94\x21\x44\x23\x90\x89\x3b\x60\x7f\x0d\x49\xa8\x9d\xa5\x78\x4e\x16\x32\xc5\x12\xd4\xe2\xe6\xa4\x68\x57\xec\x9c\x72\x14\x2f\x97\xa9\x62\xba\xa1\xc3\x98\xe9\x6c\xa5\xaa\x6e\x38\x9f\xaa\x96\x61\x38\x9f\xaf\xc4\x8a\x84\xbc\x50\x8d\x5d\x15\x93\x15\x51\x84\x7a\x34\x16\xc1\x10\x43\xd6\x6b\xc5\x8b\xc1\x1d\xa6\x15\x96\xdc\x68\x86\x6e\x20\xbd\x12\xe0\x97\xcb\x63\xa0\xd6\x9f\x25\x16\x26\x69\xeb\x5a\x2e\x97\x3c\x0e\x65\x4e\x0e\x52\x5a\x3f\x91\x3b\xf5\x7f\x6c\x18\xfc\xeb\xa3\x04\xb6\x8a\xad\xf0\x6a\x8c\x20\x15\xdd\xdc\x38\xb7\x33\xba\xd7\xa8\xab\x85\x7d\x0a\xd7\x93\x9c\xf0\x1b\xc7\x31\xf4\x6a\x5a\x33\x8e\xe9\x85\x21\x6c\x6c\x0b\xcd\x3a\x78\x11\xfe\xe3\x1c\x4c\xf8\xfd\xc5\x87\x78\xf9\xfd\x19\x18\x0b\xa2\x94\xf2\x39\x10\x7b\xc3\x6b\xca\x23\xcc\xc3\x5e\x46\x4b\x6b\xee\x31\xd1\x70\x1c\x28\x62\xb4\xc7\x1b\x8b\xec\x49\xf4\xac\x4f\x34\x04\x19\x0a\x2b\xb4\xb0\x2f\xbf\x07\xaf\xfd\x75\x0e\x7f\xea\x3e\xa7\xe1\x31\xab\xe2\x00\x24\xfa\xc7\x9d\x86\xd4\xf3\x06\xfa\xdc\x83\xcc\xa4\x0a\x4c\x1b\xba\x0a\xe7\x3f\xc5\xe0\x0f\xd9\x29\x8e\x7c\x21\x9a\x94\xd7\x7f\x27\x9c\xfd\x33\xca\x4c\xe4\xcc\x7d\x96\xc8\xe4\xaf\xdd\x1d\xf0\x5d\x9c\xae\x68\xfc\xc6\x76\xdd\x1b\xfa\xa0\x2a\x3c\xf4\xcd\xbe\xef\xf5\x2e\xfe\x4f\x50\x21\xd0\xff\x52\x37\x18\xef\xb7\x3e\xdc\x79\x1e\x2f\x95\x85\xcb\x1a\xdd\x39\xa8\x24\xa6\xf2\xe4\x7a\xc2\xfc\x92\xef\xb5\x2e\x84\x1f\x28\x20\xd7\x09\x2d\x57\xbf\x93\x5b\xad\x47\xab\xf4\x61\x41\x88\x02\xda\x22\x41\xc6\xea\xc6\x5c\x5f\xbb\xed\x60\x87\xed\x6b\x44\x80\xf6\xf2\x68\xfb\x19\x9a\xbf\x15\x6d\x43\x55\x44\xec\x37\x51\x8c\x09\x17\x64\xab\x5a\xe5\x21\x8a\xdf\xae\xc4\x20\x2a\xb6\xa9\x02\x64\xd6\xbd\xed\x73\x15\x65\x79\x36\x18\x45\x53\x31\x4b\xe9\xe2\x04\x0b\xe7\xda\xe5\x87\xa1\x44\xda\x65\xb9\x3a\xee\xc8\x3f\x41\x86\x08\x5e\x57\x99\x0c\x69\xcf\x85\xb4\xe7\x43\xda\x0b\x21\xed\xc5\xcb\xbc\xfc\xb5\x4d\x3b\x86\xf9\xb8\xe2\xe7\xf5\xc0\xc3\x02\xbd\xc2\x4f\x85\x1d\x39\xdc\x8c\xb1\x05\x32\x19\x1c\xaf\x10\xb1\x80\xb9\x40\xc0\xab\x60\x35\x0c\x30\x1f\x0c\x98\x8f\x05\x2c\x04\x03\x92\xb1\x80\xc5\x60\xc0\xd8\x39\x9a\x4f\xae\x1e\x11\x2b\x6e\x5e\x35\x84\xd5\x7a\x63\x38\xf0\x1e\x75\xac\xd1\xdf\xa8\xc1\x3a\x66\xa8\x0f\x0e\x24\xad\xc2\x45\x80\x5d\x49\xa8\x7b\x21\xf4\x11\x1d\x23\x84\x85\x8d\x7a\xc3\x85\xaa\xd8\x8e\x1f\xa3\xa6\x5d\xb7\x5d\xc5\x90\xe9\x42\x36\xc7\x32\x34\x10\x13\x69\x22\x44\x9b\x38\x32\x61\xbd\x46\x24\xac\x71\x82\x8d\xe5\x12\xa8\xa6\x0c\xa2\xb9\x14\xc5\x07\xbd\xb8\x15\x78\x44\x1c\x1d\x12\x15\xd7\x90\x3b\x35\x54\x80\xbc\xe8\x4b\xf7\xec\x60\xb1\x1e\x0a\x90\x91\x7b\xec\x41\x5d\x35\xbe\xa0\x31\x1b\x4b\x41\x1e\x2a\x26\x6e\x8e\xdd\x0e\x37\xb1\xf9\x93\x56\xe9\x14\x2b\x20\x1a\xbf\xc6\x72\x08\x6b\x19\x53\x4d\xe3\xa1\xea\x8c\xfd\x43\xd1\x4c\xc3\x72\x80\x1e\x13\x2d\xba\x68\x88\x30\x34\x28\xce\x79\x0a\x11\x19\x86\xa8\xf8\x24\xa2\x5c\x18\x22\x4f\x9c\xcf\x60\xca\x87\x61\x22\xf3\x4f\x62\x2a\x84\x4a\xe9\xd9\xd9\x15\xc3\x30\xe5\xcb\xcf\x60\x72\xcb\x43\x28\x7a\x54\xa1\xe0\x54\xab\x6e\xd9\x07\xee\x4d\xa0\x5f\x6d\x38\xc3\x8d\xc8\x9d\x43\xdc\x66\xfb\xab\x23\x95\xff\x81\x28\xe5\xc7\xbf\xab\x0b\xc5\x42\x46\x49\x90\x15\xf5\xd1\xc4\xf8\x5b\x34\xa9\x24\x11\x32\xb4\x37\xc3\x70\x9d\x37\x76\xe2\x85\x01\x5e\x1d\xe1\x3f\xee\xc9\xf1\xef\x9f\x1f\xe2\xef\xfb\x4c\xf8\x27\xe2\xef\x0c\xd0\x05\xd9\x08\x92\xb0\xa2\x7b\xb1\x90\xe7\x3a\xef\xd3\xba\xb4\xe5\x07\x48\xe4\x55\x89\xec\xc6\x24\xa7\x89\x72\x9c\x3d\x3c\x51\xae\x7a\x29\x6b\x40\xba\x1a\xcf\xfb\xff\xb6\xf0\x92\x78\xa8\x36\x5d\x42\x94\xeb\x62\xe2\x43\x75\x2b\x2c\xfa\xcc\xc7\x46\x9f\x99\xd3\xa1\xb5\x77\x66\x1d\x26\x8d\x44\xa3\x72\x89\x46\xe5\x13\x8d\x2a\x24\x1a\x55\xbc\x1d\xf5\x98\x5d\xe2\xf8\xc5\x03\xa2\x54\xcc\x4d\x8e\x55\x14\x28\x28\x12\xd2\x6c\x0d\x65\x64\x57\x06\xc0\xab\xe1\x28\xaa\x67\xa1\x92\xd4\xd6\x64\xe2\x54\xf2\x3c\x69\x61\x98\xe8\x12\x8d\xca\x25\x1a\x95\x4f\x34\xaa\x90\x68\x54\xf1\x76\x54\x44\x7e\x9c\x64\x17\xdd\x21\x4b\xa4\x53\x3f\x01\x93\xfb\x09\x98\xfc\x4f\xc0\x14\x7e\x02\xe6\x5e\xa0\x21\x9a\x79\xad\x66\x89\xca\x86\x72\x40\x3c\x74\xf6\x02\x99\xdc\x95\xc1\xb8\xce\x02\x33\x64\xe1\xaa\xe7\xce\x28\x90\x09\x8a\x0a\x10\xc6\xf3\xf5\xa0\x3b\xb7\x74\x92\xe7\xaf\x89\xe7\x45\x64\x4a\x51\xf3\x22\x0b\x7f\xc9\xcc\xc8\x5f\x9c\x59\x48\x82\x9d\x89\x60\x3d\x9f\x8b\xc5\x19\xc3\xd3\x79\x55\x9f\xcc\xde\xaf\x35\x25\x1c\xf4\x57\x89\x87\x54\x00\x62\x29\x17\x62\x29\xc7\x2d\x46\x48\x09\xe1\x6a\x29\x3e\x9c\x45\xa9\x54\x8a\xc5\xf5\x8b\xdc\x98\xc1\xc6\xe3\x52\x5c\x08\xcb\x9f\xc3\x72\xe3\xe0\x76\x31\xa4\xdd\x0b\x79\x13\x9c\xfb\x24\xab\x99\xc4\x17\x8c\x02\x4a\xa6\x79\x33\xa2\xc2\x7f\x55\x47\x2d\xde\xd4\x51\x1f\x4f\x39\x7f\x83\x25\xf7\x75\xb7\xdf\xdd\xc0\x38\xde\x5f\x3d\x5f\x90\x21\xe3\x14\xd5\xab\x7f\x44\x14\x3f\x22\x6a\x1b\x51\x45\x91\x9f\xcb\xf6\x43\x78\x54\x95\x1f\x21\x75\xb1\xf8\xa5\x14\x1f\x45\x13\x4b\x0f\xc1\x88\x4e\x04\x58\x28\x0f\xa1\x3b\xd5\x6f\xf6\xcf\x50\x15\x07\xc5\x71\x42\x6c\x44\x1c\xc1\x9b\x18\xc4\xdb\x2d\x1f\x4f\xab\x7c\x50\x99\xf0\x1a\x79\xe1\x0a\xf9\xa3\xdd\x39\xbb\xad\x53\x02\xfe\x44\x8d\xff\x42\xf8\x47\x82\x64\x34\x39\xae\x24\xb9\x68\x34\xb6\xbb\xf3\xb9\x73\x76\x78\x9b\x16\x9e\xee\x09\xdc\x5c\xf9\xb8\x9c\x9e\xf8\x97\x73\x3f\x86\xba\x17\x26\xbc\xab\x12\x6e\x70\x6a\x69\x40\x0d\xec\x5a\x41\x68\xa2\x58\x5f\x4d\xc2\xdd\xf5\x59\xde\x93\x9a\xf4\x81\x20\xc2\xe2\x62\x4e\x90\xaa\xb9\x16\xce\x3d\xbb\x7b\x30\x61\xcf\x1c\xed\x9c\xf0\x5b\x51\x17\x42\x7e\x5b\x2c\x16\xf7\x0a\xe6\x6f\xb9\x0b\x21\x41\x10\x92\x11\xaa\xea\x8e\xec\xeb\xc3\x27\x52\xff\x1c\x4d\xb6\xec\xbe\xa2\xd1\xde\x5c\x92\xb8\xba\xa2\x7d\xa3\x07\x71\x97\x04\x22\xa7\x9c\xa8\xa4\x1b\x60\x9b\x3e\x1c\x80\xbf\x61\x32\xd7\xf7\x40\x1e\xc3\xd5\xc0\x5b\x22\x41\xd6\xac\x5c\xf8\x67\x04\xdb\x96\xc4\x83\x4f\xf8\x17\xef\x95\xc1\xf3\x9f\xef\x57\xcd\x02\xa2\xb2\xb1\xbd\x4a\x68\xfc\xec\x4e\x85\xb4\x60\xbd\xf4\x06\xdc\x55\xc6\x54\xe8\x38\xd7\x27\xe7\xe9\xdb\x79\x5d\xaa\x61\xff\x1f\xc7\x01\x1e\x73\x70\x87\xe2\x89\x1f\xb1\x32\x8e\x14\xd5\x8d\x0a\x44\xed\x79\x59\x71\xa0\xc7\x35\x02\x42\x64\x03\xe4\x9b\xec\x8c\x35\xac\xca\x74\xfe\x9f\x86\x50\x0b\x18\xef\x17\xae\x90\x98\x61\x6b\x72\x13\x82\x9d\xa5\x75\xe3\x8f\x42\x2c\x62\x88\x82\xdd\xe7\x18\x85\xc8\x1d\x53\x72\x5f\x3f\xad\x71\xb7\x13\x8c\xf5\x15\x11\x2b\x9a\xe4\xf0\xe3\xea\xce\x5c\x52\xd8\x5b\x65\xbc\xab\x51\x7e\x0d\x30\x41\xee\x7f\xa7\x28\x57\x7a\x96\x48\x7f\x2f\x0b\x74\x0f\x7e\xb3\x18\xf7\x65\xd7\xb0\xf9\x24\xbd\xdf\x97\x50\x95\x3f\xe4\x10\x69\x1a\xce\x83\xee\xcc\xc3\x79\xff\x27\x91\xf8\x8a\x17\x9f\x2c\x08\xfb\xe7\x3b\x85\x90\x20\x90\x08\xbd\x49\x89\x07\x44\x54\x85\xc2\x45\xd5\x63\xca\x7e\x41\x3b\x41\x70\x5f\x0f\xb2\xf5\x3d\xa5\xeb\x33\xaf\xbc\xe5\x5d\xa1\xe1\x8c\x83\xe7\xf9\xf8\xad\x74\xf2\x6c\x32\x10\x7d\x85\xb1\xa1\x83\x62\xc4\xb4\x4b\x02\xbf\x46\x11\x71\x78\x23\x3c\xd6\x3c\x2b\xc5\x4a\xb9\x52\x4c\x00\x1a\x52\xfb\x76\xfb\x6c\xef\x7d\x1b\x54\x50\x2d\x17\xf9\x98\x5a\x85\x0b\x1a\xa2\x5b\x5e\x97\xfe\x88\xb6\x54\x29\x88\x20\x01\x5a\x9f\x2f\x3b\x8a\x73\x4d\x79\x44\x7f\xb9\x33\x1c\xc5\xb2\xee\x3c\x42\x16\x73\x20\x57\x88\x09\x8d\x5c\xe0\x80\xda\x33\x28\x11\x62\x21\x26\x7c\x73\x41\x4d\xd1\x8e\x98\x4e\xdc\x1a\x99\x36\x8c\x97\x49\x48\x11\xd8\xef\xf3\x95\x41\x88\x58\xb1\xd3\x18\xdb\x02\x09\xc6\xc0\x47\x49\x10\xe5\x5c\xb1\x12\x53\x19\x09\xd1\x37\x28\x16\x41\x5c\x6d\xcc\x05\x55\xc4\x47\x58\xbe\x40\x02\x22\xc1\x02\x28\x4a\x64\x18\x7b\x83\xe6\x82\x3d\x49\x74\x7b\x2b\xe0\x18\xed\x7a\x3a\xf3\x70\xd1\x6a\x6a\x00\xd6\x4a\x0e\x10\x31\xa5\x2c\x0f\x36\x24\x67\xf1\xfb\x4e\x7b\x22\x62\x88\x1d\xb0\xd2\x62\x0e\x96\x89\x5f\x9a\xd0\x3a\xd0\xe8\xa0\x57\x02\xd8\xc8\xad\x1f\x51\x3e\x88\xc2\xc9\x27\xc0\xf9\xe4\x14\xc5\x98\x6c\x0d\x0a\x50\x78\xd0\x37\x5e\x24\x05\x3c\x91\x10\x88\x48\xf4\x10\x20\x02\x20\xc0\x65\x82\x42\x2e\xa6\x8a\xeb\x33\x6f\xc5\x98\xef\x9f\x93\x89\x11\xa3\x4c\xff\xcd\x71\x86\x1f\x62\xfc\xea\x6d\x9e\xff\x8b\x4c\x4e\x2b\xba\xd8\xa8\xc8\xe4\x19\x9a\xa6\x38\x58\x86\x77\xf4\xf4\xc7\x99\xbc\xf7\x3f\x0d\x68\x9d\xdc\x6a\x82\xf8\xf9\xfe\x9f\x46\x42\x2e\x05\x07\x14\x46\x6e\x46\x84\x70\x51\xf5\x2e\x9d\x43\x31\x95\x71\x27\x68\xa4\x55\xc0\xc3\xeb\x32\xa6\x61\x2b\xfe\x09\xa7\x05\x55\xe0\x5e\x12\x3e\x13\x3c\xa6\x15\x5d\x84\xfb\xcb\x49\xcf\xf5\xe5\xf1\x47\x0e\xc3\xa4\x70\x3a\x01\x4c\xaa\xa0\xf7\xfa\xe0\x9d\xc4\x3a\x86\x79\x51\x54\x45\x55\xab\x98\xb0\xb1\xdc\xd8\xdf\xbb\x9a\x1d\xc3\x80\x03\xec\x55\xda\xbb\x2e\x87\x52\x64\x2d\xe2\x06\x5d\x82\x5b\x1e\xb7\xb8\x52\xa1\xb8\xaf\xeb\x8c\xf1\x59\xe3\x1d\x96\xbb\x0b\xee\xe7\xfc\xca\x2f\xb1\xb8\xef\x05\xf4\x27\x4d\x64\x8a\x57\x85\x89\xc8\x7d\x94\xe8\x7f\x50\x82\xf6\xc9\xf5\x31\xa1\xf7\xc7\xfd\x2e\x82\xec\xe9\xcb\x08\x30\xec\x5b\xf6\xe3\xdb\x1f\xbe\x79\xb7\x76\xbc\x31\xdf\x80\xcb\x89\x8a\xf2\x27\x64\x43\xec\xef\x2f\x37\x34\x4f\xdf\xb3\x80\x61\x7f\xfc\x81\x65\xb0\x3f\x7d\xac\xdf\xb2\x27\x10\x1f\xa7\x8f\x0a\xe1\xf6\xbe\x62\xe2\xbf\x02\x00\x00\xff\xff\x38\x5e\x78\x82\x7a\x42\x00\x00")

func assetsMarkdownHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsMarkdownHtml,
		"assets/markdown.html",
	)
}

func assetsMarkdownHtml() (*asset, error) {
	bytes, err := assetsMarkdownHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/markdown.html", size: 17018, mode: os.FileMode(420), modTime: time.Unix(1471313040, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/markdown.html": assetsMarkdownHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"markdown.html": &bintree{assetsMarkdownHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

